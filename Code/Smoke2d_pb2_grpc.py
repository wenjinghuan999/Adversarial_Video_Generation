# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

import Smoke2d_pb2 as Smoke2d__pb2


class Smoke2dStub(object):

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.Init = channel.unary_unary(
        '/ssv.Smoke2d/Init',
        request_serializer=Smoke2d__pb2.Smoke2dInitParams.SerializeToString,
        response_deserializer=Smoke2d__pb2.Result.FromString,
        )
    self.Step = channel.unary_unary(
        '/ssv.Smoke2d/Step',
        request_serializer=Smoke2d__pb2.Smoke2dStepParams.SerializeToString,
        response_deserializer=Smoke2d__pb2.Result.FromString,
        )
    self.Reset = channel.unary_unary(
        '/ssv.Smoke2d/Reset',
        request_serializer=Smoke2d__pb2.Smoke2dResetParams.SerializeToString,
        response_deserializer=Smoke2d__pb2.Result.FromString,
        )
    self.Destroy = channel.unary_unary(
        '/ssv.Smoke2d/Destroy',
        request_serializer=Smoke2d__pb2.Smoke2dDestroyParams.SerializeToString,
        response_deserializer=Smoke2d__pb2.Result.FromString,
        )
    self.GetData = channel.unary_stream(
        '/ssv.Smoke2d/GetData',
        request_serializer=Smoke2d__pb2.Smoke2dGetDataParams.SerializeToString,
        response_deserializer=Smoke2d__pb2.DataChunk.FromString,
        )


class Smoke2dServicer(object):

  def Init(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Step(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Reset(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Destroy(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetData(self, request, context):
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_Smoke2dServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'Init': grpc.unary_unary_rpc_method_handler(
          servicer.Init,
          request_deserializer=Smoke2d__pb2.Smoke2dInitParams.FromString,
          response_serializer=Smoke2d__pb2.Result.SerializeToString,
      ),
      'Step': grpc.unary_unary_rpc_method_handler(
          servicer.Step,
          request_deserializer=Smoke2d__pb2.Smoke2dStepParams.FromString,
          response_serializer=Smoke2d__pb2.Result.SerializeToString,
      ),
      'Reset': grpc.unary_unary_rpc_method_handler(
          servicer.Reset,
          request_deserializer=Smoke2d__pb2.Smoke2dResetParams.FromString,
          response_serializer=Smoke2d__pb2.Result.SerializeToString,
      ),
      'Destroy': grpc.unary_unary_rpc_method_handler(
          servicer.Destroy,
          request_deserializer=Smoke2d__pb2.Smoke2dDestroyParams.FromString,
          response_serializer=Smoke2d__pb2.Result.SerializeToString,
      ),
      'GetData': grpc.unary_stream_rpc_method_handler(
          servicer.GetData,
          request_deserializer=Smoke2d__pb2.Smoke2dGetDataParams.FromString,
          response_serializer=Smoke2d__pb2.DataChunk.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'ssv.Smoke2d', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
